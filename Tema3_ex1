#include <iostream>
#include <unordered_map>
#include <string>

using namespace std;

class Automat {
private:
    unordered_map<char, string> tranzitie;
    string stareCurenta;
    const string stareFinala = "q4";

public:
    Automat() {
        tranzitie = {
            {'C', "q1"},
            {'T', "q2"},
            {'A', "q3"},
            {'H', "q4"},
            {'O', "q0"}
        };
        stareCurenta = "q0";
    }

    void selecteazaBautura(char bautura) {
        if (tranzitie.find(bautura) != tranzitie.end()) {
            stareCurenta = tranzitie[bautura];
            cout << "Bautura selectata: " << bautura << ", stare curenta: " << stareCurenta << endl;
            if (stareCurenta == stareFinala) {
                cout << "Bautura este gata!" << endl;
            }
        } else {
            cout << "Selectie invalida!" << endl;
        }
    }

    void confirmaSelectie() {
        if (stareCurenta != "q0") {
            stareCurenta = "q0";
            cout << "Selectie confirmata, revenire la starea initiala: q0" << endl;
        } else {
            cout << "Nu exista o selectie valida pentru confirmare!" << endl;
        }
    }
};

int main() {
    Automat automat;

    automat.selecteazaBautura('C');
    automat.confirmaSelectie();
    automat.selecteazaBautura('T');
    automat.confirmaSelectie();
    automat.selecteazaBautura('A');
    automat.confirmaSelectie();
    automat.selecteazaBautura('H');
    automat.confirmaSelectie();

    return 0;
}
